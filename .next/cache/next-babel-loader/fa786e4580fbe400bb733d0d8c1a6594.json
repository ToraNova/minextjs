{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cjason/prodev/minextjs/utils/authreq.js\";\nvar __jsx = React.createElement;\n\n/*\n * This file is to protect pages, as in\n * the the page requires an auth token\n * from the backend\n *\n */\n// utils/withAuth.js - a HOC for protected pages\nimport React, { Component } from 'react';\nimport Router from 'next/router'; //custom Auth service\n\nimport AuthService from './authser.js';\nexport default function AuthRequired(AuthComponent) {\n  var auth = new AuthService('http://localhost:5000');\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(Authenticated, _Component);\n\n      function Authenticated(props) {\n        var _this;\n\n        _classCallCheck(this, Authenticated);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Authenticated).call(this, props));\n        _this.state = {\n          isLoading: true\n        };\n        return _this;\n      }\n\n      _createClass(Authenticated, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          if (!auth.loggedIn()) {\n            //if not logged in\n            Router.push('/login');\n          }\n\n          this.setState({\n            isLoading: false\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, this.state.isLoading ? __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, \"LOADING....\") : __jsx(AuthComponent, _extends({}, this.props, {\n            auth: auth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          })));\n        }\n      }]);\n\n      return Authenticated;\n    }(Component)\n  );\n}","map":{"version":3,"sources":["/home/cjason/prodev/minextjs/utils/authreq.js"],"names":["React","Component","Router","AuthService","AuthRequired","AuthComponent","auth","props","state","isLoading","loggedIn","push","setState"],"mappings":";;;;;;;;;AAAA;;;;;;AAOA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,eAAe,SAASC,YAAT,CAAsBC,aAAtB,EAAqC;AACnD,MAAMC,IAAI,GAAG,IAAIH,WAAJ,CAAgB,uBAAhB,CAAb;AACA;AAAA;AAAA;AAAA;;AACC,6BAAYI,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,2FAAMA,KAAN;AACA,cAAKC,KAAL,GAAa;AACbC,UAAAA,SAAS,EAAE;AADE,SAAb;AAFkB;AAKlB;;AANF;AAAA;AAAA,4CAQsB;AACpB,cAAI,CAACH,IAAI,CAACI,QAAL,EAAL,EAAsB;AACrB;AACAR,YAAAA,MAAM,CAACS,IAAP,CAAY,QAAZ;AACA;;AACD,eAAKC,QAAL,CAAc;AAAEH,YAAAA,SAAS,EAAE;AAAb,WAAd;AACA;AAdF;AAAA;AAAA,iCAgBU;AACR,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,KAAKD,KAAL,CAAWC,SAAX,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADC,GAGD,MAAC,aAAD,eAAmB,KAAKF,KAAxB;AAA+B,YAAA,IAAI,EAAED,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJA,CADA;AASA;AA1BF;;AAAA;AAAA,MAAmCL,SAAnC;AAAA;AA4BA","sourcesContent":["/*\n * This file is to protect pages, as in\n * the the page requires an auth token\n * from the backend\n *\n */\n\n// utils/withAuth.js - a HOC for protected pages\nimport React, {Component} from 'react'\nimport Router from 'next/router'\n\n//custom Auth service\nimport AuthService from './authser.js'\n\nexport default function AuthRequired(AuthComponent) {\n\tconst auth = new AuthService('http://localhost:5000')\n\treturn class Authenticated extends Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props)\n\t\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t\t};\n\t\t}\n\n\t\tcomponentDidMount () {\n\t\t\tif (!auth.loggedIn()) {\n\t\t\t\t//if not logged in\n\t\t\t\tRouter.push('/login')\n\t\t\t}\n\t\t\tthis.setState({ isLoading: false })\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t<div>\n\t\t\t{this.state.isLoading ? (\n\t\t\t<div>LOADING....</div>\n\t\t\t) : (\n\t\t\t<AuthComponent {...this.props} auth={auth} />\n\t\t\t)}\n\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}