{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/cjason/prodev/minextjs/utils/authreq.js\";\nvar __jsx = React.createElement;\n\n/*\n * This file is to protect pages, as in\n * the the page requires an auth token\n * from the backend\n *\n */\n// utils/withAuth.js - a HOC for protected pages\nimport React, { Component } from 'react';\nimport Router from 'next/router'; //custom Auth service\n\nimport AuthService from './authser.js';\nexport default function AuthRequired(AuthComponent) {\n  const auth = new AuthService('http://localhost:5000');\n  return class Authenticated extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isLoading: true\n      };\n    }\n\n    componentDidMount() {\n      if (!auth.loggedIn()) {\n        //if not logged in\n        Router.push('/login');\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    }\n\n    render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.isLoading ? __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"LOADING....\") : __jsx(AuthComponent, _extends({}, this.props, {\n        auth: auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/cjason/prodev/minextjs/utils/authreq.js"],"names":["React","Component","Router","AuthService","AuthRequired","AuthComponent","auth","Authenticated","constructor","props","state","isLoading","componentDidMount","loggedIn","push","setState","render"],"mappings":";;;;AAAA;;;;;;AAOA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,eAAe,SAASC,YAAT,CAAsBC,aAAtB,EAAqC;AACnD,QAAMC,IAAI,GAAG,IAAIH,WAAJ,CAAgB,uBAAhB,CAAb;AACA,SAAO,MAAMI,aAAN,SAA4BN,SAA5B,CAAsC;AAC5CO,IAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACbC,QAAAA,SAAS,EAAE;AADE,OAAb;AAGA;;AAEDC,IAAAA,iBAAiB,GAAI;AACpB,UAAI,CAACN,IAAI,CAACO,QAAL,EAAL,EAAsB;AACrB;AACAX,QAAAA,MAAM,CAACY,IAAP,CAAY,QAAZ;AACA;;AACD,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA;;AAEDK,IAAAA,MAAM,GAAG;AACR,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKN,KAAL,CAAWC,SAAX,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADC,GAGD,MAAC,aAAD,eAAmB,KAAKF,KAAxB;AAA+B,QAAA,IAAI,EAAEH,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJA,CADA;AASA;;AA1B2C,GAA7C;AA4BA","sourcesContent":["/*\n * This file is to protect pages, as in\n * the the page requires an auth token\n * from the backend\n *\n */\n\n// utils/withAuth.js - a HOC for protected pages\nimport React, {Component} from 'react'\nimport Router from 'next/router'\n\n//custom Auth service\nimport AuthService from './authser.js'\n\nexport default function AuthRequired(AuthComponent) {\n\tconst auth = new AuthService('http://localhost:5000')\n\treturn class Authenticated extends Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props)\n\t\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t\t};\n\t\t}\n\n\t\tcomponentDidMount () {\n\t\t\tif (!auth.loggedIn()) {\n\t\t\t\t//if not logged in\n\t\t\t\tRouter.push('/login')\n\t\t\t}\n\t\t\tthis.setState({ isLoading: false })\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t<div>\n\t\t\t{this.state.isLoading ? (\n\t\t\t<div>LOADING....</div>\n\t\t\t) : (\n\t\t\t<AuthComponent {...this.props} auth={auth} />\n\t\t\t)}\n\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}